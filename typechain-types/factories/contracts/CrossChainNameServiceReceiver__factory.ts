/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CrossChainNameServiceReceiver,
  CrossChainNameServiceReceiverInterface,
} from "../../contracts/CrossChainNameServiceReceiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "lookup",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainSelector",
        type: "uint64",
      },
    ],
    name: "InvalidSourceChain",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_lookup",
    outputs: [
      {
        internalType: "contract ICrossChainNameServiceLookup",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_router",
    outputs: [
      {
        internalType: "contract IRouterClient",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_sourceChainSelector",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61010060405234801561001157600080fd5b50604051610883380380610883833981016040819052610030916100a5565b826001600160a01b03811661005f576040516335fdcccd60e21b81526000600482015260240160405180910390fd5b6001600160a01b0390811660805292831660a052911660c0526001600160401b031660e0526100f9565b80516001600160a01b03811681146100a057600080fd5b919050565b6000806000606084860312156100ba57600080fd5b6100c384610089565b92506100d160208501610089565b60408501519092506001600160401b03811681146100ee57600080fd5b809150509250925092565b60805160a05160c05160e05161073e610145600039600081816094015261021101526000818161014d01526102a30152600060d301526000818161012401526101b1015261073e6000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301ffc9a7146100675780633bbcb4f81461008f578063581bdd16146100ce57806385572ffb1461010d578063b0f479a114610122578063e0b30b1f14610148575b600080fd5b61007a610075366004610312565b61016f565b60405190151581526020015b60405180910390f35b6100b67f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160401b039091168152602001610086565b6100f57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610086565b61012061011b366004610343565b6101a6565b005b7f00000000000000000000000000000000000000000000000000000000000000006100f5565b6100f57f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b031982166385572ffb60e01b14806101a057506001600160e01b031982166301ffc9a760e01b145b92915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101f6576040516335fdcccd60e21b81523360048201526024015b60405180910390fd5b61020761020282610567565b61020a565b50565b80602001517f00000000000000000000000000000000000000000000000000000000000000006001600160401b0316816001600160401b03161461026c5760405163093cf64560e11b81526001600160401b03821660048201526024016101ed565b60008083606001518060200190518101906102879190610637565b604051631e59c52960e01b815291935091506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631e59c529906102da90859085906004016106c4565b600060405180830381600087803b1580156102f457600080fd5b505af1158015610308573d6000803e3d6000fd5b5050505050505050565b60006020828403121561032457600080fd5b81356001600160e01b03198116811461033c57600080fd5b9392505050565b60006020828403121561035557600080fd5b81356001600160401b0381111561036b57600080fd5b820160a0818503121561033c57600080fd5b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156103b5576103b561037d565b60405290565b60405160a081016001600160401b03811182821017156103b5576103b561037d565b604051601f8201601f191681016001600160401b03811182821017156104055761040561037d565b604052919050565b80356001600160401b038116811461042457600080fd5b919050565b60006001600160401b038211156104425761044261037d565b50601f01601f191660200190565b600082601f83011261046157600080fd5b813561047461046f82610429565b6103dd565b81815284602083860101111561048957600080fd5b816020850160208301376000918101602001919091529392505050565b6001600160a01b038116811461020757600080fd5b600082601f8301126104cc57600080fd5b813560206001600160401b038211156104e7576104e761037d565b6104f5818360051b016103dd565b82815260069290921b8401810191818101908684111561051457600080fd5b8286015b8481101561055c57604081890312156105315760008081fd5b610539610393565b8135610544816104a6565b81528185013585820152835291830191604001610518565b509695505050505050565b600060a0823603121561057957600080fd5b6105816103bb565b823581526105916020840161040d565b602082015260408301356001600160401b03808211156105b057600080fd5b6105bc36838701610450565b604084015260608501359150808211156105d557600080fd5b6105e136838701610450565b606084015260808501359150808211156105fa57600080fd5b50610607368286016104bb565b60808301525092915050565b60005b8381101561062e578181015183820152602001610616565b50506000910152565b6000806040838503121561064a57600080fd5b82516001600160401b0381111561066057600080fd5b8301601f8101851361067157600080fd5b805161067f61046f82610429565b81815286602083850101111561069457600080fd5b6106a5826020830160208601610613565b80945050505060208301516106b9816104a6565b809150509250929050565b60408152600083518060408401526106e3816060850160208801610613565b6001600160a01b0393909316602083015250601f91909101601f19160160600191905056fea2646970667358221220dc2115c90e11e7b89c38a96cdb8d230d9abec1b3851985d576751eaef84a946a64736f6c63430008130033";

type CrossChainNameServiceReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrossChainNameServiceReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrossChainNameServiceReceiver__factory extends ContractFactory {
  constructor(...args: CrossChainNameServiceReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    router: string,
    lookup: string,
    sourceChainSelector: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<CrossChainNameServiceReceiver> {
    return super.deploy(
      router,
      lookup,
      sourceChainSelector,
      overrides || {}
    ) as Promise<CrossChainNameServiceReceiver>;
  }
  override getDeployTransaction(
    router: string,
    lookup: string,
    sourceChainSelector: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      router,
      lookup,
      sourceChainSelector,
      overrides || {}
    );
  }
  override attach(address: string): CrossChainNameServiceReceiver {
    return super.attach(address) as CrossChainNameServiceReceiver;
  }
  override connect(signer: Signer): CrossChainNameServiceReceiver__factory {
    return super.connect(signer) as CrossChainNameServiceReceiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossChainNameServiceReceiverInterface {
    return new utils.Interface(_abi) as CrossChainNameServiceReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrossChainNameServiceReceiver {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CrossChainNameServiceReceiver;
  }
}
