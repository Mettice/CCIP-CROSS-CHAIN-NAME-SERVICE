/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CrossChainNameServiceLookup,
  CrossChainNameServiceLookupInterface,
} from "../../contracts/CrossChainNameServiceLookup";

const _abi = [
  {
    inputs: [],
    name: "AlreadyTaken",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "Registered",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "lookup",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "crossChainNameService",
        type: "address",
      },
    ],
    name: "setCrossChainNameServiceAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5033806000816100675760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0384811691909117909155811615610097576100978161009f565b505050610148565b336001600160a01b038216036100f75760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640161005e565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b610583806101576000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631e59c529146100675780636f2aba191461007c57806379ba50971461008f5780638da5cb5b14610097578063f2fde38b146100c0578063f67187ac146100d3575b600080fd5b61007a610075366004610471565b610107565b005b61007a61008a3660046104bf565b6101c7565b61007a6101f1565b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61007a6100ce3660046104bf565b6102a0565b6100a46100e13660046104e1565b80516020818301810180516002825292820191909301209152546001600160a01b031681565b6003546001600160a01b03163314610131576040516282b42960e81b815260040160405180910390fd5b60006001600160a01b031660028360405161014c919061051e565b908152604051908190036020019020546001600160a01b03161461018357604051630c0e5cf760e21b815260040160405180910390fd5b80600283604051610194919061051e565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b03199092169190911790555050565b6101cf6102b4565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146102495760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b6102a86102b4565b6102b181610309565b50565b6000546001600160a01b031633146103075760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606401610240565b565b336001600160a01b038216036103615760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610240565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126103d957600080fd5b813567ffffffffffffffff808211156103f4576103f46103b2565b604051601f8301601f19908116603f0116810190828211818310171561041c5761041c6103b2565b8160405283815286602085880101111561043557600080fd5b836020870160208301376000602085830101528094505050505092915050565b80356001600160a01b038116811461046c57600080fd5b919050565b6000806040838503121561048457600080fd5b823567ffffffffffffffff81111561049b57600080fd5b6104a7858286016103c8565b9250506104b660208401610455565b90509250929050565b6000602082840312156104d157600080fd5b6104da82610455565b9392505050565b6000602082840312156104f357600080fd5b813567ffffffffffffffff81111561050a57600080fd5b610516848285016103c8565b949350505050565b6000825160005b8181101561053f5760208186018101518583015201610525565b50600092019182525091905056fea26469706673582212206f0e0aedf38f949fb31d03a0cd4ca69609ceb68e41fa97f5db90326f1d1414c664736f6c63430008130033";

type CrossChainNameServiceLookupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrossChainNameServiceLookupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrossChainNameServiceLookup__factory extends ContractFactory {
  constructor(...args: CrossChainNameServiceLookupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<CrossChainNameServiceLookup> {
    return super.deploy(
      overrides || {}
    ) as Promise<CrossChainNameServiceLookup>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CrossChainNameServiceLookup {
    return super.attach(address) as CrossChainNameServiceLookup;
  }
  override connect(signer: Signer): CrossChainNameServiceLookup__factory {
    return super.connect(signer) as CrossChainNameServiceLookup__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossChainNameServiceLookupInterface {
    return new utils.Interface(_abi) as CrossChainNameServiceLookupInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrossChainNameServiceLookup {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CrossChainNameServiceLookup;
  }
}
