/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CrossChainNameServiceRegister,
  CrossChainNameServiceRegisterInterface,
} from "../../../contracts/CrossChainNameServiceReceiver.sol/CrossChainNameServiceRegister";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "lookup",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainSelector",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "ccnsReceiverAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "enableChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "i_lookup",
    outputs: [
      {
        internalType: "contract ICrossChainNameServiceLookup",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_router",
    outputs: [
      {
        internalType: "contract IRouterClient",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_chains",
    outputs: [
      {
        internalType: "uint64",
        name: "chainSelector",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "ccnsReceiverAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610d62380380610d6283398101604081905261002f91610194565b33806000816100855760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b03848116919091179091558116156100b5576100b5816100cf565b5050506001600160a01b039182166080521660a0526101c7565b336001600160a01b038216036101275760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640161007c565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b80516001600160a01b038116811461018f57600080fd5b919050565b600080604083850312156101a757600080fd5b6101b083610178565b91506101be60208401610178565b90509250929050565b60805160a051610b696101f9600039600081816101bc01526106d201526000818160ca01526105c50152610b696000f3fe60806040526004361061008a5760003560e01c80638da5cb5b116100595780638da5cb5b1461016c578063b67235621461018a578063e0b30b1f146101aa578063f2c298be146101de578063f2fde38b146101fe57600080fd5b806351cff8d914610096578063581bdd16146100b85780635b54137d1461010957806379ba50971461015757600080fd5b3661009157005b600080fd5b3480156100a257600080fd5b506100b66100b136600461086d565b61021e565b005b3480156100c457600080fd5b506100ec7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011557600080fd5b5061012961012436600461088f565b6102c8565b6040805167ffffffffffffffff90941684526001600160a01b03909216602084015290820152606001610100565b34801561016357600080fd5b506100b6610312565b34801561017857600080fd5b506000546001600160a01b03166100ec565b34801561019657600080fd5b506100b66101a53660046108a8565b6103bc565b3480156101b657600080fd5b506100ec7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101ea57600080fd5b506100b66101f9366004610909565b610474565b34801561020a57600080fd5b506100b661021936600461086d565b61073f565b610226610753565b60405147906000906001600160a01b0384169083908381818185875af1925050503d8060008114610273576040519150601f19603f3d011682016040523d82523d6000602084013e610278565b606091505b50509050806102c35760405162461bcd60e51b81526020600482015260126024820152714661696c656420746f20776974686472617760701b60448201526064015b60405180910390fd5b505050565b600281815481106102d857600080fd5b60009182526020909120600290910201805460019091015467ffffffffffffffff82169250600160401b9091046001600160a01b03169083565b6001546001600160a01b031633146103655760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064016102ba565b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b6103c4610753565b6040805160608101825267ffffffffffffffff94851681526001600160a01b0393841660208201908152918101928352600280546001810182556000829052915191027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace810180549351909516600160401b026001600160e01b0319909316919095161717909155517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf90910155565b60025460005b818110156106ba57600060028281548110610497576104976109ba565b600091825260208083206040805160608082018352600295909502909201805467ffffffffffffffff81168452600160401b90046001600160a01b0390811694840194855260019091015483830152815160a08101909252925190921660c083015293509091908060e081016040516020818303038152906040528152602001873360405160200161052a929190610a16565b604051602081830303815290604052815260200183815260200160006001600160a01b031681526020016105a76040518060200160405280876040015181525060408051915160248084019190915281518084039091018152604490920190526020810180516001600160e01b03166397a657c960e01b17905290565b905283516040516320487ded60e01b81529192506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916396f4e9f99183916320487ded91610602918790600401610a40565b602060405180830381865afa15801561061f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106439190610b1a565b85516040516001600160e01b031960e085901b16815261066891908690600401610a40565b60206040518083038185885af1158015610686573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906106ab9190610b1a565b5083600101935050505061047a565b50604051631e59c52960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631e59c529906107099085903390600401610a16565b600060405180830381600087803b15801561072357600080fd5b505af1158015610737573d6000803e3d6000fd5b505050505050565b610747610753565b610750816107a8565b50565b6000546001600160a01b031633146107a65760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016102ba565b565b336001600160a01b038216036108005760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016102ba565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b80356001600160a01b038116811461086857600080fd5b919050565b60006020828403121561087f57600080fd5b61088882610851565b9392505050565b6000602082840312156108a157600080fd5b5035919050565b6000806000606084860312156108bd57600080fd5b833567ffffffffffffffff811681146108d557600080fd5b92506108e360208501610851565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561091b57600080fd5b813567ffffffffffffffff8082111561093357600080fd5b818401915084601f83011261094757600080fd5b813581811115610959576109596108f3565b604051601f8201601f19908116603f01168101908382118183101715610981576109816108f3565b8160405282815287602084870101111561099a57600080fd5b826020860160208301376000928101602001929092525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000815180845260005b818110156109f6576020818501810151868301820152016109da565b506000602082860101526020601f19601f83011685010191505092915050565b604081526000610a2960408301856109d0565b905060018060a01b03831660208301529392505050565b6000604067ffffffffffffffff8516835260208181850152845160a083860152610a6d60e08601826109d0565b905081860151603f1980878403016060880152610a8a83836109d0565b88860151888203830160808a01528051808352908601945060009350908501905b80841015610add57845180516001600160a01b0316835286015186830152938501936001939093019290860190610aab565b5060608901516001600160a01b031660a08901526080890151888203830160c08a01529550610b0c81876109d0565b9a9950505050505050505050565b600060208284031215610b2c57600080fd5b505191905056fea26469706673582212204bbe5289ca3428ff65d8ab29154b2849c028acc1269de0f93361a7e4755feedc64736f6c63430008130033";

type CrossChainNameServiceRegisterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrossChainNameServiceRegisterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrossChainNameServiceRegister__factory extends ContractFactory {
  constructor(...args: CrossChainNameServiceRegisterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    router: string,
    lookup: string,
    overrides?: Overrides & { from?: string }
  ): Promise<CrossChainNameServiceRegister> {
    return super.deploy(
      router,
      lookup,
      overrides || {}
    ) as Promise<CrossChainNameServiceRegister>;
  }
  override getDeployTransaction(
    router: string,
    lookup: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(router, lookup, overrides || {});
  }
  override attach(address: string): CrossChainNameServiceRegister {
    return super.attach(address) as CrossChainNameServiceRegister;
  }
  override connect(signer: Signer): CrossChainNameServiceRegister__factory {
    return super.connect(signer) as CrossChainNameServiceRegister__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossChainNameServiceRegisterInterface {
    return new utils.Interface(_abi) as CrossChainNameServiceRegisterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrossChainNameServiceRegister {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CrossChainNameServiceRegister;
  }
}
